#!/bin/bash
if [ -d "/home/vagrant/jarbas/bin/" ] ; then
  . /home/vagrant/jarbas/bin/functions.sh
fi

if [ -d "/root/gpcn/xenserver/scripts/jarbas/bin/" ] ; then
  . /root/gpcn/xenserver/scripts/jarbas/bin/functions.sh
fi

if [ -d "/gpcn/atacado/scripts/jarbas/bin/" ] ; then
  . /gpcn/atacado/scripts/jarbas/bin/functions.sh
fi

if [ -d "/gpcn/monitorado/scripts/jarbas/bin/" ] ; then
  . /gpcn/monitorado/scripts/jarbas/bin/functions.sh
fi

if [ -d "/home/ifpb/jarbas/bin/" ] ; then
  . /home/ifpb/jarbas/bin/functions.sh
fi

# Se DER ERRO USAR O dos2unix: dos2unix -k -o "nome do arquivo"

### COLORS
BLACK=$(tput setaf 0)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
LIME_YELLOW=$(tput setaf 190)
POWDER_BLUE=$(tput setaf 153)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)
BRIGHT=$(tput bold)
NORMAL=$(tput sgr0)
BLINK=$(tput blink)
REVERSE=$(tput smso)
UNDERLINE=$(tput smul)
### Example: echo -e "${RED}red text ${GREEN}green text${RS}"

### CONSTANT VARIABLES
NUM_RODADAS="30"

### JARBAS WITHOUT ARGS WILL SHOW ARG MENU
if [ -z $1 ]
then
  echo -e "FAZER AQUI MENU DE ARGS"
  echo -e "Versão: 0.1"
  exit 1 ;
fi

### ARGS READING
while [[ $# > 0 ]]
do
  key="$1"

  case $key in

    ### Make me will configure machine with selected programs
    --makeme)
      machineType="$2"
      case $machineType  in

        attacked)
          echo -e "${BLUE} ### Configuring Attacked Machine ###"

          echo -e "${BLUE} ## Creating Log Directories ##"
          mkdir -p ~/jarbas/attacked/logs/collectl/
          mkdir -p ~/jarbas/attacked/logs/netstat/

          echo -e "${BLUE} ## Installing Build Essentials ##"
	        sed -i "/cdrom/d" /etc/apt/sources.list
          apt-get -y update > /dev/null
          apt-get -y upgrade > /dev/null
          apt-get install -y build-essential > /dev/null

          echo -e "${BLUE} ## Instalando NFS##"
          apt-get -y install nfs-common > /dev/null
          mkdir -p /root/nfs-logs-attacked
          mount -t nfs 192.168.10.254:/root/nfs-logs /root/nfs-logs-attacked
          echo "192.168.10.254:/root/nfs-logs /root/nfs-logs-attacked nfs auto,exec 0 0" >> /etc/fstab

          echo -e "${BLUE} ## Installing Git  ##"
          apt-get install -y git > /dev/null
          echo -e "${GREEN} Status Git:"
          git --version

          echo -e "${BLUE} ## Configuring Jarbas  ##"
          ln -s jarbas /usr/bin/jarbas
          chmod +x functions.sh

          echo -e "${BLUE} ## Installing SSHPASS ##"
	        apt-get -y install ssh >/dev/null
          apt-get -y install sshpass > /dev/null
          sed -i 's,PermitRootLogin without-password,PermitRootLogin yes,g' /etc/ssh/sshd_config
          echo -e "StrictHostKeyChecking no" >> /etc/ssh/ssh_config
          service ssh restart
          rm /home/jarbas/.ssh/known_hosts
          rm /root/.ssh/known_hosts

          echo -e "${GREEN} Status SSHPASS:"
          sshpass -V

          echo -e "${BLUE} ## Installing Apache ##"
          apt-get -y install apache2 > /dev/null
          echo -e "${GREEN} Status Apache:"
          apache2 -v

          echo -e "${BLUE} ## Installing Collectl ##"
          apt-get -y install collectl > /dev/null
          echo -e "${GREEN} Status Collectl:"
          collectl --version

          echo -e "${BLUE} ## Installing Netstat ##"
          apt-get -y install netstat-nat > /dev/null
          echo -e "${GREEN} Status Netstat:"
          netstat --version

          echo -e "${BLUE} ## Installing Stress-NG ##"
          apt-get -y install stress-ng > /dev/null
          echo -e "${GREEN} Status Stress-ng:"
          stress-ng --version

          exit 1
          ;;

        master)
          echo -e "${BLUE} ### Configuring Master Machine ###"

          echo -e "${BLUE} ## Creating Log Directories ##"
          mkdir -p ~/jarbas/master/logs/

          echo -e "${BLUE} ## Installing Build Essentials ##"
          sed -i "/cdrom/d" /etc/apt/sources.list
          apt-get -y update > /dev/null
          apt-get -y upgrade > /dev/null
          apt-get install -y build-essential > /dev/null

          echo -e "${BLUE} ## Instalando NFS##"
          apt-get -y insttall nfs-kernel-server > /dev/null
          mkdir -p /root/nfs-logs
          chmod 777 /root/nfs-logs
          chown -R nobody:nogroup /root/nfs-logs
          echo "/root/nfs-logs 192.168.0.0/255.255.255.0(rw)" >> /etc/exports
          echo "/root/nfs-logs 192.168.10.0/255.255.255.0(rw)" >> /etc/exports
          /etc/init.d/nfs-kernel-server restart > /dev/null
          exports

          echo -e "${BLUE} ## Installing Git  ##"
          apt-get install -y git > /dev/null
          echo -e "${GREEN} Status Git:"
          git --version

          echo -e "${BLUE} ## Configuring Jarbas  ##"
          ln -s jarbas /usr/bin/jarbas
          chmod +x functions.sh

          echo -e "${BLUE} ## Installing SSHPASS ##"
          apt-get -y install ssh >/dev/null
          apt-get -y install sshpass > /dev/null
          sed -i 's,PermitRootLogin without-password,PermitRootLogin yes,g' /etc/ssh/sshd_config
          echo -e "StrictHostKeyChecking no" >> /etc/ssh/ssh_config
          service ssh restart
          rm /home/jarbas/.ssh/known_hosts
          rm /root/.ssh/known_hosts

          echo -e "${GREEN} Status SSHPASS:"
          sshpass -Vs

          exit 1
          ;;

        attacker)
          echo -e "${BLUE} ### Configuring Attacker Machine ###"

          echo -e "${BLUE} ## Creating Log Directories ##"
          mkdir -p ~/jarbas/attacker/logs/

          echo -e "${BLUE} ## Installing Build Essentials ##"
          sed -i "/cdrom/d" /etc/apt/sources.list
          apt-get -y update > /dev/null
          apt-get -y upgrade > /dev/null
          apt-get install -y build-essential > /dev/null

          echo -e "${BLUE} ## Instalando NFS##"
          apt-get -y install nfs-common > /dev/null
          mkdir -p /root/nfs-logs-attacker
          mount -t nfs 192.168.10.254:/root/nfs-logs /root/nfs-logs-attacker
          echo "192.168.10.254:/root/nfs-logs /root/nfs-logs-attacker nfs auto,exec 0 0" >> /etc/fstab

          echo -e "${BLUE} ## Installing Git  ##"
          apt-get install -y git > /dev/null
          echo -e "${GREEN} Status Git:"
          git --version

          echo -e "${BLUE} ## Configuring Jarbas  ##"
          ln -s jarbas /usr/bin/jarbas
          chmod +x functions.sh

          echo -e "${BLUE} ## Installing SSHPASS ##"
          apt-get -y install ssh >/dev/null
          apt-get -y install sshpass > /dev/null
          sed -i 's,PermitRootLogin without-password,PermitRootLogin yes,g' /etc/ssh/sshd_config
          echo -e "StrictHostKeyChecking no" >> /etc/ssh/ssh_config
          service ssh restart
          rm /home/jarbas/.ssh/known_hosts
          rm /root/.ssh/known_hosts

          echo -e "${GREEN} Status SSHPASS:"
          sshpass -Vs

          echo -e "${BLUE} ## Installing EthTool ##"
          sudo apt-get -y install ethtool > /dev/null
          echo -e "${GREEN} Status EthTool: "
          ethtool --version

          echo -e "${BLUE} ## Installing T50 ##"
          wget --quiet "http://downloads.sourceforge.net/project/t50/t50-5.6/t50-5.6.6.tar.gz"
          tar -xvzf t50-5.6.6.tar.gz > /dev/null
          cd t50-5.6.6
          sudo ./configure > /dev/null
          sudo make > /dev/null
          sudo make install > /dev/null
          echo -e "${GREEN} Status T50: "
          t50 --version

          exit 1
          ;;

        client)
          echo -e "${BLUE} ### Configuring Client Machine ###"

          echo -e "${BLUE} ## Creating Log Directories ##"
          mkdir -p ~/jarbas/client/logs/

          echo -e "${BLUE} ## Installing Build Essentials ##"
          sed -i "/cdrom/d" /etc/apt/sources.list
          apt-get -y update > /dev/null
          apt-get -y upgrade > /dev/null
          apt-get install -y build-essential > /dev/null

          echo -e "${BLUE} ## Instalando NFS##"
          apt-get -y install nfs-common > /dev/null
          mkdir -p /root/nfs-logs-client
          mount -t nfs 192.168.0.254:/root/nfs-logs /root/nfs-logs-client
          echo "192.168.0.254:/root/nfs-logs /root/nfs-logs-client nfs auto,exec 0 0" >> /etc/fstab

          echo -e "${BLUE} ## Installing Git  ##"
          apt-get install -y git > /dev/null
          echo -e "${GREEN} Status Git:"
          git --version

          echo -e "${BLUE} ## Configuring Jarbas  ##"
          ln -s jarbas /usr/bin/jarbas
          chmod +x functions.sh

          echo -e "${BLUE} ## Installing SSHPASS ##"
          apt-get -y install ssh >/dev/null
          apt-get -y install sshpass > /dev/null
          sed -i 's,PermitRootLogin without-password,PermitRootLogin yes,g' /etc/ssh/sshd_config
          echo -e "StrictHostKeyChecking no" >> /etc/ssh/ssh_config
          service ssh restart
          rm /home/jarbas/.ssh/known_hosts
          rm /root/.ssh/known_hosts

          echo -e "${GREEN} Status SSHPASS:"
          sshpass -Vs

          echo -e "${BLUE} ## Installing EthTool ##"
          sudo apt-get -y install ethtool > /dev/null
          echo -e "${GREEN} Status EthTool: "
          ethtool --version

          echo -e "${BLUE} ## Installing TCP Dump ##"
          sudo apt-get -y install tcpdump > /dev/null
          echo -e "${GREEN} Status TCPDump: "
          tcpdump --version

          echo -e "${BLUE} ## Installing Siege ##"
          sudo apt-get -y install siege > /dev/null
          echo -e "${GREEN} Status Siege: "
          siege --version

          exit 1
          ;;

        monitored)
          echo -e "Configurando Hypervisor"

          exit 1
          ;;

        *)
          echo -e "${RED} J.A.R.B.A.S LOG: Machine type not found." ; exit 1
    esac
    shift
    ;;

    run)
    if [ -z "$2" ]
    then
      echo -e "Executar o run com valores padrão."
      run $NUM_RODADAS
      exit 1;
    fi

    args="$2"
    case $args in
      -r| --rodadas)
      NUM_RODADAS="$3" #mover para dentro do else

      if [ -z "$NUM_RODADAS" ]
      then
        echo -e "J.A.R.B.A.S LOG: Argumento VAZIO depois de --rodadas (-r)" ; exit 1
      else
        run $NUM_RODADAS
      fi

      ;;

      check)
      checkArgs="$3"

      if [ -z "$checkArgs" ]
      then
        echo -e "J.A.R.B.A.S LOG: Argumento VAZIO depois do comando check" ; exit 1
      else

        case $checkArgs in

          ping)
          numClients="6"
          numSlaves="10"

          pingCheck $numClients $numSlaves

          #				pingArgs="$4"
          #
          #					if [ -z "$pingArgs" ]
          #					  then
          #					    numClients="10"
          #					    numSlaves="6"
          #					  else
          #						echo -e "PRECISA IMPLEMENTAR"
          #						case $pingArgs in
          #							-nc| --num-clients)
          #								numClients="$5"
          #
          #								if [ -z "$numClients" ]
          #								  then
          #								    numClients="10"
          #								fi
          #
          #								shift
          #
          #								;;
          #
          #							-ns| --num-slaves)
          #								numSlaves="$5"
          #
          #					if [ -z "$numSlaves" ]
          #					  then
          #					    numSlaves="6"
          #					fi
          #
          #		shift
          #		;;
          #	*)
          #		echo -e "J.A.R.B.A.S LOG: Argumento INVÁLIDO depois do comando --ping (-p)" ; exit 1
          #esac

          #fi

          ;;
          *)
          echo -e "J.A.R.B.A.S LOG: Argumento INVÁLIDO depois do comando check" ; exit 1
        esac
        shift
      fi

      ;;

      atacado)
      # echo -e "Me execute como atacado"
      NUM_RODADAS="$3"
      tipoDeExperimento="$4"
      durRodada="$5"

      runAtacado $NUM_RODADAS $tipoDeExperimento $durRodada
      ;;

      monitorado)
      # echo -e "Me execute como monitorado"
      NUM_RODADAS="$3"
      tipoDeExperimento="$4"
      durRodada="$5"

      runMonitorado $NUM_RODADAS $tipoDeExperimento $durRodada
      ;;

      cliente)
      # echo -e "Me execute como cliente"
      NUM_RODADAS="$3"
      tipoDeExperimento="$4"
      durRodada="$5"

      runCliente $NUM_RODADAS $tipoDeExperimento $durRodada
      ;;

      atacante)
      # echo -e "Me execute como atacante"
      NUM_RODADAS="$3"
      tipoDeExperimento="$4"
      durRodada="$5"

      runAtacante $NUM_RODADAS $tipoDeExperimento $durRodada
      ;;

      xenserver)
      # echo -e "Me execute como atacado"
      NUM_RODADAS="$3"
      tipoDeExperimento="$4"
      durRodada="$5"

      runXenServer $NUM_RODADAS $tipoDeExperimento $durRodada
      ;;

      *)
      echo -e "J.A.R.B.A.S LOG: Argumento INVÁLIDO depois do comando run" ; exit 1
    esac
    #shift
    break
    ;;

    *)
    echo -e "J.A.R.B.A.S LOG: Argumento INVÁLIDO" ; exit 1
    ;;
  esac
  shift
done
